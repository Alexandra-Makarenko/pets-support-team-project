{"version":3,"file":"static/js/558.8226eee4.chunk.js","mappings":"qQAGaA,EAAkBC,EAAAA,GAAAA,QAAH,0FAEjBC,EAAAA,EAAAA,QAIEC,EAAWF,EAAAA,GAAAA,GAAH,yIAGVC,EAAAA,EAAAA,Q,wCCTEE,EAAOH,EAAAA,GAAAA,GAAH,sUAUNC,EAAAA,EAAAA,QAOEG,EAAOJ,EAAAA,GAAAA,IAAH,sFAKJK,EAAUL,EAAAA,GAAAA,IAAH,+CAIPM,EAAgBN,EAAAA,GAAAA,EAAH,mTAebO,EAAMP,EAAAA,GAAAA,IAAH,gFAMHQ,EAAYR,EAAAA,GAAAA,IAAH,sHAQTS,EAAQT,EAAAA,GAAAA,GAAH,sIAQLU,EAAKV,EAAAA,GAAAA,GAAH,iKAQFW,EAAKX,EAAAA,GAAAA,GAAH,0CAGFY,EAAQZ,EAAAA,GAAAA,EAAH,2DAKLa,EAAOb,EAAAA,GAAAA,EAAH,uEAIJc,EAAWd,EAAAA,GAAAA,IAAH,iL,SCvERe,EAAqB,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACnC,OACE,UAACb,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,UAAgBU,EAAIC,YACpB,SAACV,EAAD,CAAKW,IAAKF,EAAIG,UAAWC,IAAKJ,EAAIK,KAAMC,QAAQ,aAGlD,UAAClB,EAAD,YACE,UAACI,EAAD,YACE,SAACC,EAAD,UAAQO,EAAIO,OAAS,wBACrB,UAACb,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAOG,EAAIQ,UAFb,UAAYR,EAAIS,GAAhB,YAIA,UAACd,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAOG,EAAIU,UAFb,UAAYV,EAAIS,GAAhB,YAIA,UAACd,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,UAAOG,EAAIW,gBAFb,UAAYX,EAAIS,GAAhB,gBAMJ,SAACX,EAAD,SAIP,ECKD,EAzC4B,WAC1B,IAAMc,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAiBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC7BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,GAAgBH,EAASI,UACnC,GAAE,CAACX,EAAUO,EAASI,WAEvB,IAAItB,EAAW,OAoBf,MAlBuB,wBAAnBgB,EACFhB,EAAW,aACiB,kBAAnBgB,EACThB,EAAW,OACiB,2BAAnBgB,EACThB,EAAW,gBACiB,sBAAnBgB,EACThB,EAAW,WACiB,iBAAnBgB,EACThB,EAAW,YAEXuB,QAAQC,IAAI,gBAGdJ,EAAAA,EAAAA,YAAU,WACRT,GAASc,EAAAA,EAAAA,GAAazB,GACvB,GAAE,CAACW,EAAUX,KAGZ,SAAClB,EAAD,WACE,SAACG,EAAD,UACG4B,EAAKa,KAAI,SAAC3B,EAAK4B,GAAN,OACR,SAAC7B,EAAD,CAA8BC,IAAKA,GAAV4B,EADjB,OAMjB,C,gIChDM,IAAMV,EAAoB,SAAAW,GAAK,OAAIA,EAAMC,QAAQ7B,QAAlB,EAEzBe,EAAa,SAAAa,GAAK,OAAIA,EAAME,QAAQC,KAAlB,EAElBC,EAAsB,SAAAJ,GAAK,OAAIA,EAAME,QAAQG,SAAlB,EAE3BC,EAAkB,SAAAN,GAAK,OAAIA,EAAME,QAAQK,KAAlB,C","sources":["components/Notices/NoticesCategoryList/NoticesCategoryList.styled.js","components/Notices/NoticeCategoryItem/NoticeCategoryItem.styled.js","components/Notices/NoticeCategoryItem/NoticeCategoryItem.js","components/Notices/NoticesCategoryList/NoticesCategoryList.js","redux/notices/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from '../../../styles/device';\n\nexport const PetsListSection = styled.section`\n  padding-top: 30px;\n  @media ${device.tablet} {\n    padding-top: 60px;\n  }\n`;\nexport const PetsList = styled.ul`\n  margin-bottom: 32px;\n\n  @media ${device.tablet} {\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -32px;\n  }\n`;\n","import styled from 'styled-components';\nimport { device } from '../../../styles/device';\n\nexport const Item = styled.li`\n  margin-left: 32px;\n  height: 100%;\n  color: #111111;\n  background-color: #ffffff;\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  border-radius: 0px 0px 40px 40px;\n  overflow-wrap: break-word;\n  \n\n  @media ${device.tablet} {\n    flex-basis: calc(100% / 4 - 32px);\n    margin-bottom: 32px;\n  \n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\nexport const ImgWrap = styled.div`\n  position: relative;\n`;\n\nexport const CategoryLabel = styled.p`\n  position: absolute;\n  top: 20px;\n  left: 0;\n  z-index: 1;\n  padding: 6px 0;\n  width: 158px;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  text-align: center;\n  background: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(2px);\n  border-radius: 0px 40px 40px 0px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 288px;\n  object-fit: cover;\n`;\n\nexport const WrapInner = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  gap: 20px;\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 28px;\n  line-height: calc(38 / 28);\n  height: 76px;\n  overflow: hidden;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n`;\nexport const Li = styled.li`\n  display: flex;\n`;\nexport const Lable = styled.p`\n  width: 90px;\n  flex-shrink: 0;\n`;\n\nexport const Text = styled.p`\n  @media screen and (min-width: 768px) {\n  }\n`;\nexport const ThumbBtn = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  gap: 12px;\n  padding-bottom: 12px;\n`;\n","import {\n  Item,\n  Wrap,\n  ImgWrap,\n  CategoryLabel,\n  Img,\n  WrapInner,\n  Title,\n  Ul,\n  Li,\n  Lable,\n  Text,\n  ThumbBtn,\n} from './NoticeCategoryItem.styled';\n\nexport const NoticeCategoryItem = ({ pet }) => {\n  return (\n    <Item>\n      <ImgWrap>\n        <CategoryLabel>{pet.category}</CategoryLabel>\n        <Img src={pet.avatarURL} alt={pet.name} loading=\"lazy\" />\n        {/* <FavoriteBtn/> */}\n      </ImgWrap>\n      <Wrap>\n        <WrapInner>\n          <Title>{pet.title || 'Title must be here'}</Title>\n          <Ul>\n            <Li key={`${pet.id}+breed`}>\n              <Lable>Breed:</Lable>\n              <Text>{pet.breed}</Text>\n            </Li>\n            <Li key={`${pet.id}+place`}>\n              <Lable>Place:</Lable>\n              <Text>{pet.place}</Text>\n            </Li>\n            <Li key={`${pet.id}+age`}>\n              <Lable>Age:</Lable>\n              <Text>{pet.dateofbirth}</Text>\n            </Li>\n          </Ul>\n        </WrapInner>\n        <ThumbBtn>{/* <LearnMoreBtn/> */}</ThumbBtn>\n      </Wrap>\n    </Item>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getNotices, getCategoryFilter } from 'redux/notices/selectors';\nimport { PetsListSection, PetsList } from './NoticesCategoryList.styled';\nimport { useEffect } from 'react';\nimport { fetchNotices } from 'redux/notices/operations';\nimport { useLocation } from 'react-router-dom';\nimport { setStatusFilter } from 'redux/notices/filtersSlice';\nimport { NoticeCategoryItem } from '../NoticeCategoryItem/NoticeCategoryItem';\n\nconst NoticesCategoryList = () => {\n  const dispatch = useDispatch();\n  const pets = useSelector(getNotices);\n  const categoryFilter = useSelector(getCategoryFilter);\n  const location = useLocation();\n\n  useEffect(() => {\n    dispatch(setStatusFilter(location.pathname));\n  }, [dispatch, location.pathname]);\n\n  let category = 'sell';\n\n  if (categoryFilter === '/notices/lost-found') {\n    category = 'lost-found';\n  } else if (categoryFilter === '/notices/sell') {\n    category = 'sell';\n  } else if (categoryFilter === '/notices/in-good-hands') {\n    category = 'in-good-hands';\n  } else if (categoryFilter === '/notices/favorite') {\n    category = 'favorite';\n  } else if (categoryFilter === '/notices/own') {\n    category = 'mynotices';\n  } else {\n    console.log('no category');\n  }\n\n  useEffect(() => {\n    dispatch(fetchNotices(category));\n  }, [dispatch, category]);\n\n  return (\n    <PetsListSection>\n      <PetsList>\n        {pets.map((pet, idx) => (\n          <NoticeCategoryItem key={idx} pet={pet} />\n        ))}\n      </PetsList>\n    </PetsListSection>\n  );\n};\n\nexport default NoticesCategoryList;\n","export const getCategoryFilter = state => state.filters.category;\n\nexport const getNotices = state => state.notices.items;\n\nexport const getNoticesIsLoading = state => state.notices.isLoading;\n\nexport const getNoticesError = state => state.notices.error;\n"],"names":["PetsListSection","styled","device","PetsList","Item","Wrap","ImgWrap","CategoryLabel","Img","WrapInner","Title","Ul","Li","Lable","Text","ThumbBtn","NoticeCategoryItem","pet","category","src","avatarURL","alt","name","loading","title","breed","id","place","dateofbirth","dispatch","useDispatch","pets","useSelector","getNotices","categoryFilter","getCategoryFilter","location","useLocation","useEffect","setStatusFilter","pathname","console","log","fetchNotices","map","idx","state","filters","notices","items","getNoticesIsLoading","isLoading","getNoticesError","error"],"sourceRoot":""}