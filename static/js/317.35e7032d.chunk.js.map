{"version":3,"file":"static/js/317.35e7032d.chunk.js","mappings":"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","sources":["Validations/AuthErrorMessage.styled.js","Validations/RegisterValidation.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  font-family: 'Manrope400';\n  display: block;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: 0.04em;\n  margin-top: 4px;\n  color: red;\n`;\n","import { ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ErrorText } from './AuthErrorMessage.styled';\n\nconst nameRules = /^[aA-zZ\\s]+$/;\nconst passwordRules = /^(\\S+$)/g;\nconst emailRules = /^(?!-)(?!.*@[^,]*,)/;\nconst regionRules = /^()(\\w+(,|\\s)\\s*)+\\w+$/;\nconst regionRulesOnlyLetters = /^[a-zA-Z\\s]{3,},[a-zA-Z\\s]{4,}$/;\n\nexport const stepOneReqisterSchema = yup.object().shape({\n  email: yup\n    .string()\n    .min(6, 'Must be more than 6 characters')\n    .max(63, 'Maximum number of characters 63')\n    .email('Please enter a valid email')\n    .matches(emailRules, 'Please enter a valid email')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(7, 'Your password must be more than 7 characters')\n    .max(32, 'Password is too long')\n    .matches(passwordRules, 'Any characters except spaces')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])/,\n      'Must contain one uppercase, one lowercase'\n    )\n    .matches(/^(?=.{6,20}$)\\D*\\d/, 'Must contain one number')\n    .required('Password is a required field'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Please enter the password again'),\n});\n\nexport const stepTwoReqisterSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Must be more than 2 characters')\n    .max(16, 'Maximum number of characters 16')\n    .matches(nameRules, 'Only latin characters are allowed for this field')\n    .required('Name is a required field'),\n  region: yup\n    .string()\n    .required('City, region is a required field')\n    .min(5, 'Format must be City, region. For example: Brovary, Kyiv')\n    .max(60, 'Maximum number of characters 16')\n    .matches(\n      regionRules,\n      'Format must be City, region. For example: Brovary, Kyiv'\n    )\n    .matches(regionRulesOnlyLetters, 'regionRulesOnlyLetters'),\n  // .matches(region2, 'Must contain one number'),\n  phone: yup\n    .string()\n    .min(13, 'Please enter a valid phone number')\n    .required('Phone is a required field'),\n});\n\nexport const FormError = ({ name, message }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport register_bg_step1_mob from '../../../assets/images/bg-pictures/mobile/register_bg_step1_mob.png';\nimport register_bg_step2_mob from '../../../assets/images/bg-pictures/mobile/register_bg_step2_mob.png';\nimport tablet_vector_1 from '../../../assets/images/bg-pictures/tablet/tablet_vector_1.png';\nimport tablet_vector_2 from '../../../assets/images/bg-pictures/tablet/tablet_vector_2.png';\nimport tablet_vector_3 from '../../../assets/images/bg-pictures/tablet/tablet_vector_3.png';\nimport tablet_vector_4 from '../../../assets/images/bg-pictures/tablet/tablet_vector_4.png';\nimport tablet_vector_5 from '../../../assets/images/bg-pictures/tablet/tablet_vector_5.png';\nimport tablet_vector_6 from '../../../assets/images/bg-pictures/tablet/tablet_vector_6.png';\nimport desktop_vector_1 from '../../../assets/images/bg-pictures/desktop/desktop_vector_1.png';\nimport desktop_vector_2 from '../../../assets/images/bg-pictures/desktop/desktop_vector_2.png';\nimport desktop_vector_3 from '../../../assets/images/bg-pictures/desktop/desktop_vector_3.png';\nimport { device } from 'styles/device';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { BiShow } from 'react-icons/bi';\nimport { BiHide } from 'react-icons/bi';\n\nexport const PhoneInputField = props => {\n  return (\n    <PhoneInput\n      regions={['europe']}\n      country=\"ua\"\n      value={props.value}\n      onChange={props.onChange}\n      inputStyle={{\n        fontFamily: 'Manrope400',\n        color: 'rgba(17, 17, 17, 0.6)',\n        letterSpacing: '0.04em',\n        width: '180px',\n        background: '#FDF7F2',\n        outline: 0,\n        border: 0,\n        padding: 0,\n        margin: 0,\n        height: '100%',\n        left: '48px',\n      }}\n      containerStyle={{\n        marginTop: '16px',\n        paddingTop: '12px',\n        paddingBottom: '12px',\n        paddingLeft: '10px',\n        background: '#FDF7F2',\n        border: '1px solid rgba(245, 146, 86, 0.5)',\n        borderRadius: '40px',\n        textAlign: 'left',\n      }}\n      buttonStyle={{\n        background: '#FDF7F2',\n        border: 0,\n        color: 'rgba(17, 17, 17, 0.6)',\n        borderRadius: '50%',\n      }}\n      dropdownStyle={{\n        height: '200px',\n        color: '#000000',\n        background: '#FDF7F2',\n        textAlign: 'left',\n        borderRadius: '6px',\n      }}\n    />\n  );\n};\n\nexport const SectionRegisterForm = styled.section`\n  min-height: calc(100vh - 100px);\n\n  background-color: ${props => props.theme.backgrounds.input};\n\n  background-image: ${props =>\n    props.currentStep === 0\n      ? `url(${register_bg_step1_mob})`\n      : `url(${register_bg_step2_mob})`};\n\n  background-size: 'cover';\n  background-position: left 50% bottom 0px;\n  background-repeat: no-repeat;\n\n  @media ${device.tablet} {\n    min-height: calc(100vh - 237px);\n    min-height: ${props =>\n      props.currentStep === 0 ? `calc(100vh - 237px)` : `calc(100vh - 220px)`};\n\n    margin-top: ${props => (props.currentStep === 0 ? `169px` : `152px`)};\n\n    background-image: url(${tablet_vector_3}), url(${tablet_vector_2}),\n      url(${tablet_vector_4}), url(${tablet_vector_1}), url(${tablet_vector_5}),\n      url(${tablet_vector_6});\n\n    background-position: left 0 bottom 0, right 0 bottom 0, right 0 bottom 0,\n      right 0 bottom 0, left 163px bottom 163px, left 24px bottom 256px;\n  }\n\n  @media ${device.desktop} {\n    min-height: calc(100vh - 131px);\n    margin-top: ${props => (props.currentStep === 0 ? `46px` : `44px`)};\n\n    background-image: url(${desktop_vector_1}), url(${desktop_vector_2}),\n      url(${desktop_vector_3}), url(${tablet_vector_5}), url(${tablet_vector_6});\n\n    background-position: right 305px bottom 0, right 96px bottom 0,\n      right 0 bottom 0, left 258px bottom 131px, left 32px bottom 248px;\n  }\n`;\n\nexport const RegisterFormContainer = styled.div`\n  max-width: 320px;\n  margin: 0px auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media ${device.tablet} {\n    max-width: 768px;\n    padding: 0px 80px;\n  }\n\n  @media ${device.desktop} {\n    max-width: 1280px;\n    padding: 0px 331px;\n  }\n`;\n\nexport const RegisterFormBox = styled.div`\n  top: 40px;\n  text-align: center;\n  @media ${device.tablet} {\n    background-color: ${props => props.theme.backgrounds.bodySecondary};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding-top: 60px;\n    padding-bottom: 40px;\n    padding-right: 80px;\n    padding-left: 80px;\n  }\n\n  @media ${device.desktop} {\n    padding-bottom: 60px;\n  }\n`;\n\nexport const RegisterTitle = styled.h1`\n  margin-bottom: 40px;\n  font-family: 'Manrope700';\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.primary};\n\n  @media ${device.tablet} {\n    font-family: 'Manrope500';\n    font-size: 36px;\n    line-height: 49px;\n  }\n\n  @media ${device.desktop} {\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  font-family: 'Manrope400';\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  width: 100%;\n  margin-top: 16px;\n  padding-top: 11px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  color: ${props => props.theme.fontColors.inputTextColor};\n  outline: none;\n  background-color: ${props => props.theme.backgrounds.input};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n\n  @media ${device.tablet} {\n    font-family: 'Manrope400';\n    font-size: 18px;\n    line-height: 25px;\n    padding-top: 14px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n  }\n`;\n\nexport const WrapInputPassword = styled.div`\n  position: relative;\n`;\n\nexport const ShowPasswordIcon = styled(BiShow)`\n  position: absolute;\n  right: 20px;\n  top: 8.5px;\n  color: #f59256;\n  width: 26px;\n  height: 26px;\n  @media ${device.tablet} {\n    top: 10px;\n\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const HidePasswordIcon = styled(BiHide)`\n  position: absolute;\n  right: 20px;\n  top: 8.5px;\n  color: #f59256;\n  width: 26px;\n  height: 26px;\n  @media ${device.tablet} {\n    top: 10px;\n\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const NextFormRegisterBtn = styled.button`\n  font-family: 'Manrope500';\n  margin-top: ${props => (props.currentStep === 0 ? '40px' : '28px')};\n  width: 100%;\n  color: ${props => props.theme.fontColors.white};\n\n  background-color: ${props =>\n    props.disabled ? '#A0A0A0' : props.theme.backgrounds.buttonPrimary};\n  border-radius: 40px;\n  padding-top: 8.5px;\n  padding-bottom: 8.5px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  /* &:hover {\n    transform: scale(1.03);\n  } */\n\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 10.5px;\n    padding-bottom: 10.5px;\n  }\n`;\n\nexport const BackFormRegisterBtn = styled.button`\n  font-family: 'Manrope500';\n  margin-top: 12px;\n  width: 100%;\n  color: ${props => props.theme.fontColors.secondary};\n  background-color: ${props => props.theme.backgrounds.bodyPrimary};\n  border: 2px solid #f59256;\n  border-radius: 40px;\n  padding-top: 8.5px;\n  padding-bottom: 8.5px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  outline: none;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  @media ${device.tablet} {\n    margin-top: 16px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 10.5px;\n    padding-bottom: 10.5px;\n  }\n`;\n\nexport const RegisterBoxText = styled.div`\n  margin-top: 40px;\n`;\n\nexport const RegisterLinkText = styled.p`\n  font-family: 'Manrope400';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.inputTextColor};\n`;\n\nexport const ReqisterLoginLink = styled(NavLink)`\n  color: ${props => props.theme.fontColors.blueLink};\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { register } from 'redux/auth/authOperations';\nimport 'react-phone-input-2/lib/style.css';\nimport { PhoneInputField } from './RegisterForm.styled';\nimport { ErrorText } from 'Validations/AuthErrorMessage.styled';\n\nimport {\n  stepOneReqisterSchema,\n  stepTwoReqisterSchema,\n  FormError,\n} from 'Validations/RegisterValidation';\n\nimport {\n  RegisterFormContainer,\n  FormInput,\n  NextFormRegisterBtn,\n  SectionRegisterForm,\n  RegisterTitle,\n  RegisterLinkText,\n  RegisterBoxText,\n  ReqisterLoginLink,\n  BackFormRegisterBtn,\n  RegisterFormBox,\n  WrapInputPassword,\n  ShowPasswordIcon,\n  HidePasswordIcon,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [userData, setUserData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    region: '',\n    phone: '',\n  });\n\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const makeRequest = formData => {\n    const body = {\n      email: formData.email,\n      password: formData.password,\n      name: formData.name,\n      place: formData.region,\n      phone: formData.phone,\n    };\n    console.log('Form Submitted', body);\n    dispatch(register(body));\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setUserData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setUserData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const registerSteps = [\n    <RegisterStepOne\n      currentStep={currentStep}\n      nextStep={handleNextStep}\n      userData={userData}\n    />,\n    <RegisterStepTwo\n      currentStep={currentStep}\n      nextStep={handleNextStep}\n      prevStep={handlePrevStep}\n      userData={userData}\n    />,\n  ];\n\n  return (\n    <SectionRegisterForm currentStep={currentStep}>\n      {registerSteps[currentStep]}\n    </SectionRegisterForm>\n  );\n};\n\nconst RegisterStepOne = props => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const confirmPasswordInputId = nanoid();\n\n  const handleSubmit = values => {\n    props.nextStep(values);\n  };\n\n  const toogleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <RegisterFormContainer>\n      <RegisterFormBox>\n        <RegisterTitle>Registration</RegisterTitle>\n        <Formik\n          initialValues={props.userData}\n          validationSchema={stepOneReqisterSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isValid, dirty }) => (\n            <Form autoComplete=\"off\">\n              <FormInput\n                id={emailInputId}\n                name=\"email\"\n                placeholder=\"Email\"\n                autoComplete=\"on\"\n              />\n              <FormError name=\"email\" />\n              <WrapInputPassword>\n                <FormInput\n                  id={passwordInputId}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"off\"\n                />\n                {showPassword ? (\n                  <HidePasswordIcon onClick={toogleShowPassword} />\n                ) : (\n                  <ShowPasswordIcon onClick={toogleShowPassword} />\n                )}\n              </WrapInputPassword>\n              <FormError name=\"password\" />\n              <WrapInputPassword>\n                <FormInput\n                  id={confirmPasswordInputId}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm Password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"off\"\n                />\n                {showPassword ? (\n                  <HidePasswordIcon onClick={toogleShowPassword} />\n                ) : (\n                  <ShowPasswordIcon onClick={toogleShowPassword} />\n                )}\n              </WrapInputPassword>\n              <FormError name=\"confirmPassword\" />\n              <NextFormRegisterBtn\n                currentStep={props.currentStep}\n                type=\"submit\"\n                disabled={!isValid}\n              >\n                Next\n              </NextFormRegisterBtn>\n            </Form>\n          )}\n        </Formik>\n        <RegisterBoxText>\n          <RegisterLinkText>\n            Already have an account?{' '}\n            <ReqisterLoginLink to=\"/login\">Login</ReqisterLoginLink>\n          </RegisterLinkText>\n        </RegisterBoxText>\n      </RegisterFormBox>\n    </RegisterFormContainer>\n  );\n};\n\nconst RegisterStepTwo = props => {\n  const nameInputId = nanoid();\n  const regionInputId = nanoid();\n  const phoneInputId = nanoid();\n\n  const handleSubmit = values => {\n    props.nextStep(values, true);\n  };\n\n  return (\n    <RegisterFormContainer>\n      <RegisterFormBox>\n        <RegisterTitle>Registration</RegisterTitle>\n        <Formik\n          initialValues={props.userData}\n          validationSchema={stepTwoReqisterSchema}\n          onSubmit={handleSubmit}\n        >\n          {({\n            values,\n            setFieldValue,\n            isValid,\n            dirty,\n            errors,\n            touched,\n            context,\n          }) => (\n            <Form autoComplete=\"off\">\n              <FormInput\n                id={nameInputId}\n                name=\"name\"\n                placeholder=\"Name\"\n                type=\"text\"\n                autoComplete=\"off\"\n              />\n              <FormError name=\"name\" />\n              <FormInput\n                id={regionInputId}\n                name=\"region\"\n                placeholder=\"City, reqion\"\n                type=\"text\"\n                autoComplete=\"off\"\n              />\n              <FormError name=\"region\" />\n\n              <FormInput\n                component={PhoneInputField}\n                type=\"text\"\n                id={phoneInputId}\n                name=\"phone\"\n                onChange={e => setFieldValue('phone', `+${e}`)}\n                value={values.phone}\n                error={Boolean(errors.phone) && Boolean(touched.phone)}\n                helperText={Boolean(touched.phone) && errors.phone}\n              />\n              <ErrorText>{errors.phone}</ErrorText>\n\n              <NextFormRegisterBtn\n                currentStep={props.currentStep}\n                type=\"submit\"\n                disabled={!dirty || !isValid}\n              >\n                Register\n              </NextFormRegisterBtn>\n              <BackFormRegisterBtn\n                type=\"button\"\n                onClick={() => props.prevStep(values)}\n              >\n                Back\n              </BackFormRegisterBtn>\n            </Form>\n          )}\n        </Formik>\n        <RegisterBoxText>\n          <RegisterLinkText>\n            Already have an account?{' '}\n            <ReqisterLoginLink to=\"/login\">Login</ReqisterLoginLink>\n          </RegisterLinkText>\n        </RegisterBoxText>\n      </RegisterFormBox>\n    </RegisterFormContainer>\n  );\n};\n","import { RegisterForm } from 'components/Auth/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <main>\n      <title>Registration</title>\n      <RegisterForm />\n    </main>\n  );\n};\nexport default RegisterPage;\n"],"names":["ErrorText","styled","stepOneReqisterSchema","yup","shape","email","min","max","matches","required","password","confirmPassword","oneOf","stepTwoReqisterSchema","name","region","phone","FormError","message","ErrorMessage","render","PhoneInputField","props","regions","country","value","onChange","inputStyle","fontFamily","color","letterSpacing","width","background","outline","border","padding","margin","height","left","containerStyle","marginTop","paddingTop","paddingBottom","paddingLeft","borderRadius","textAlign","buttonStyle","dropdownStyle","SectionRegisterForm","theme","backgrounds","input","currentStep","register_bg_step1_mob","register_bg_step2_mob","device","tablet_vector_3","tablet_vector_2","tablet_vector_4","tablet_vector_1","tablet_vector_5","tablet_vector_6","desktop_vector_1","desktop_vector_2","desktop_vector_3","RegisterFormContainer","RegisterFormBox","bodySecondary","RegisterTitle","fonts","fontColors","primary","FormInput","Field","inputTextColor","WrapInputPassword","ShowPasswordIcon","BiShow","HidePasswordIcon","BiHide","NextFormRegisterBtn","white","disabled","buttonPrimary","BackFormRegisterBtn","secondary","bodyPrimary","RegisterBoxText","RegisterLinkText","ReqisterLoginLink","NavLink","blueLink","RegisterForm","dispatch","useDispatch","useState","userData","setUserData","setCurrentStep","makeRequest","formData","body","place","console","log","register","handleNextStep","newData","final","prev","registerSteps","RegisterStepOne","nextStep","RegisterStepTwo","prevStep","showPassword","setShowPassword","emailInputId","nanoid","passwordInputId","confirmPasswordInputId","toogleShowPassword","Formik","initialValues","validationSchema","onSubmit","values","isValid","dirty","Form","autoComplete","id","placeholder","type","onClick","to","nameInputId","regionInputId","phoneInputId","setFieldValue","errors","touched","context","component","e","error","Boolean","helperText"],"sourceRoot":""}