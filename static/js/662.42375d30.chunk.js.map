{"version":3,"file":"static/js/662.42375d30.chunk.js","mappings":"gQASaA,IAJUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gDAIeA,EAAAA,GAAAA,IAAH,kGAGV,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,KAA5B,KAGdC,EAAwBN,EAAAA,GAAAA,IAAH,uSAcrBO,EAAgBP,EAAAA,GAAAA,GAAH,iJAQbQ,GAAYR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,+YAOX,SAAAE,GAAK,OAAIA,EAAMC,MAAMO,WAAWC,cAA3B,IAOM,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,KAA5B,IAKdO,EAAsBZ,EAAAA,GAAAA,OAAH,saAGrB,SAAAE,GAAK,OAAIA,EAAMC,MAAMO,WAAWG,KAA3B,IACM,SAAAX,GAAK,OAAIA,EAAMC,MAAMC,YAAYU,aAA5B,IAmBdC,EAAkBf,EAAAA,GAAAA,IAAH,6CAIfgB,EAAmBhB,EAAAA,GAAAA,EAAH,qKAOlB,SAAAE,GAAK,OAAIA,EAAMC,MAAMO,WAAWC,cAA3B,IAGHM,GAAoBjB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,uCACnB,SAAAE,GAAK,OAAIA,EAAMC,MAAMO,WAAWS,QAA3B,IAGHC,EAAgBpB,EAAAA,GAAAA,IAAH,wRAEAqB,G,SCjFbC,EAAW,WAGtB,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAClBE,GAAyBF,EAAAA,EAAAA,MAsB/B,OACE,SAACzB,EAAD,WACE,UAACO,EAAD,YACE,SAACC,EAAD,4BACA,SAAC,KAAD,CACEoB,cAxBc,CACpBC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAoCXC,SAjCa,SAACC,EAAOC,GAC3B,IAAMC,EAAO,CACXN,MAAOI,EAAMJ,MACbC,SAAUG,EAAMH,SAChBC,gBAAiBE,EAAMF,iBAGzBK,QAAQC,IAAIF,EAIb,EAMK,SAkBG,cAAGG,OAAH,EAAWC,QAAX,EAAoBC,QAApB,EAA6BC,MAA7B,OACC,UAAC,KAAD,CAAMC,aAAa,MAAnB,WACE,SAACjC,EAAD,CACEkC,GAAInB,EAGJoB,KAAK,QACLC,YAAY,QAEZH,aAAa,SAKf,SAACjC,EAAD,CACEkC,GAAIjB,EAEJkB,KAAK,WACLC,YAAY,WACZC,KAAK,WACLJ,aAAa,SAKf,SAACjC,EAAD,CACEkC,GAAIhB,EAGJiB,KAAK,kBACLC,YAAY,mBACZC,KAAK,WACLJ,aAAa,SAMf,SAAC7B,EAAD,CAAqBiC,KAAK,SAA1B,oBAtCH,KA0CH,SAAC9B,EAAD,WACE,UAACC,EAAD,sCAC2B,KACzB,SAACC,EAAD,CAAmB6B,GAAG,SAAtB,yBAGJ,SAAC1B,EAAD,QAIP,EC7GD,EARqB,WACnB,OACE,6BACE,6CACA,SAACE,EAAD,MAGL,C","sources":["components/Auth/AuthForm/AuthForm.styled.jsx","components/Auth/AuthForm/AuthForm.js","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\n// import { theme } from 'styles/theme';\nimport register_bg_mob from '../../../assets/images/bg-pictures/mobile/register_bg_mob.png';\nexport const FormBox = styled(Form)`\n  margin-bottom: 70px;\n`;\n\nexport const SectionRegisterForm = styled.div`\n  padding-top: 42px;\n  padding-bottom: 103px;\n  background-color: ${props => props.theme.backgrounds.input};\n`;\n\nexport const RegisterFormContainer = styled.div`\n  max-width: 320px;\n  padding: 0px 20px;\n  margin: 0px auto;\n  text-align: center;\n  /* margin-left: auto;\n  margin-right: auto; */\n  padding-left: 20px;\n  padding-right: 20px;\n  /* justify-items: center;\n  align-items: center; */\n  /* margin-bottom: 30px; */\n`;\n\nexport const RegisterTitle = styled.h1`\n  margin-bottom: 40px;\n  font-family: var(--font-base);\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 33px;\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  width: 100%;\n  margin-top: 16px;\n  padding-top: 11px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  color: ${props => props.theme.fontColors.inputTextColor};\n  font-family: var(--font-base);\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 19px;\n  outline: none;\n  /* width: 250px; */\n  background-color: ${props => props.theme.backgrounds.input};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n`;\n\nexport const NextFormRegisterBtn = styled.button`\n  margin-top: 40px;\n  width: 100%;\n  color: ${props => props.theme.fontColors.white};\n  background-color: ${props => props.theme.backgrounds.buttonPrimary};\n  border-radius: 40px;\n  padding-top: 8.5px;\n  padding-bottom: 8.5px;\n\n  font-family: var(--font-base);\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: 0.04em;\n\n  outline: none;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const RegisterBoxText = styled.div`\n  margin-top: 40px;\n`;\n\nexport const RegisterLinkText = styled.p`\n  font-family: var(--font-base);\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n\n  color: ${props => props.theme.fontColors.inputTextColor};\n`;\n\nexport const ReqisterLoginLink = styled(NavLink)`\n  color: ${props => props.theme.fontColors.blueLink};\n`;\n\nexport const RegisterBgImg = styled.div`\n  display: block;\n  background-image: url(${register_bg_mob});\n  /* width: 500px;\n  height: 200px; */\n  height: 100vh;\n  /* background-size: 'contain'; */\n  /* background-size: 'cover'; */\n  background-position: right 0px top 0px;\n  background-repeat: no-repeat;\n`;\n","// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { nanoid } from 'nanoid';\n// import * as yup from 'yup';\n\nimport {\n  RegisterFormContainer,\n  FormInput,\n  NextFormRegisterBtn,\n  SectionRegisterForm,\n  RegisterTitle,\n  RegisterLinkText,\n  RegisterBoxText,\n  ReqisterLoginLink,\n  RegisterBgImg,\n} from './AuthForm.styled';\n\nexport const AuthForm = () => {\n  // const dispatch = useDispatch();\n\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const confirmPasswordInputId = nanoid();\n\n  // Formik\n  const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const handleSubmit = (value, actions) => {\n    const body = {\n      email: value.email,\n      password: value.password,\n      confirmPassword: value.confirmPassword,\n    };\n\n    console.log(body);\n    // dispatch(register(body));\n    // actions.resetForm();\n    // setValues({ ...values, password: '' });\n  };\n\n  return (\n    <SectionRegisterForm>\n      <RegisterFormContainer>\n        <RegisterTitle>Registration</RegisterTitle>\n        <Formik\n          initialValues={initialValues}\n          // validationSchema={yup.object().shape({\n          //   name: yup\n          //     .string()\n          //     .required('Please enter name')\n          //     .min(2, 'Name too short'),\n          //   email: yup\n          //     .string()\n          //     .required('Please enter email')\n          //     .email('Invalid email'),\n          //   password: yup\n          //     .string()\n          //     .required('Please enter password')\n          //     .min(7, 'Password should be minimum 7 characters long'),\n          // })}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, isValid, touched, dirty }) => (\n            <Form autoComplete=\"off\">\n              <FormInput\n                id={emailInputId}\n                // label=\"Email\"\n                // variant=\"outlined\"\n                name=\"email\"\n                placeholder=\"Email\"\n                // type=\"email\"\n                autoComplete=\"off\"\n                // required\n                // error={Boolean(errors.email) && Boolean(touched.email)}\n                // helperText={Boolean(touched.email) && errors.email}\n              />\n              <FormInput\n                id={passwordInputId}\n                // label=\"Password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                // required\n                // error={Boolean(errors.name) && Boolean(touched.name)}\n                // helperText={Boolean(touched.name) && errors.name}\n              />\n              <FormInput\n                id={confirmPasswordInputId}\n                // label=\"Password\"\n                // variant=\"outlined\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                // required\n                // error={Boolean(errors.name) && Boolean(touched.name)}\n                // helperText={Boolean(touched.name) && errors.name}\n              />\n\n              <NextFormRegisterBtn type=\"submit\">Next</NextFormRegisterBtn>\n            </Form>\n          )}\n        </Formik>\n        <RegisterBoxText>\n          <RegisterLinkText>\n            Already have an account?{' '}\n            <ReqisterLoginLink to=\"/about\">Login</ReqisterLoginLink>\n          </RegisterLinkText>\n        </RegisterBoxText>\n        <RegisterBgImg></RegisterBgImg>\n      </RegisterFormContainer>\n    </SectionRegisterForm>\n  );\n};\n","import { AuthForm } from 'components/Auth/AuthForm/AuthForm';\n\nconst RegisterPage = () => {\n  return (\n    <main>\n      <title>Registration</title>\n      <AuthForm />\n    </main>\n  );\n};\nexport default RegisterPage;\n"],"names":["SectionRegisterForm","styled","Form","props","theme","backgrounds","input","RegisterFormContainer","RegisterTitle","FormInput","Field","fontColors","inputTextColor","NextFormRegisterBtn","white","buttonPrimary","RegisterBoxText","RegisterLinkText","ReqisterLoginLink","NavLink","blueLink","RegisterBgImg","register_bg_mob","AuthForm","emailInputId","nanoid","passwordInputId","confirmPasswordInputId","initialValues","email","password","confirmPassword","onSubmit","value","actions","body","console","log","errors","isValid","touched","dirty","autoComplete","id","name","placeholder","type","to"],"sourceRoot":""}