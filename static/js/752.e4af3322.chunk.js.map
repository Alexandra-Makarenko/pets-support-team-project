{"version":3,"file":"static/js/752.e4af3322.chunk.js","mappings":"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","sources":["Validations/AuthErrorMessage.styled.js","Validations/LoginValidation.js","components/Auth/LoginForm/LoginForm.styled.js","components/Auth/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  font-family: 'Manrope400';\n  display: block;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: 0.04em;\n  margin-top: 4px;\n  color: red;\n`;\n","import { ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ErrorText } from './AuthErrorMessage.styled';\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email is a required field'),\n  password: yup.string().required('Password is a required field'),\n});\n\nexport const passwordSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email is a required field')\n});\n\nexport const FormError = ({ name, message }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport register_bg_step1_mob from '../../../assets/images/bg-pictures/mobile/register_bg_step1_mob.png';\nimport tablet_vector_1 from '../../../assets/images/bg-pictures/tablet/tablet_vector_1.png';\nimport tablet_vector_2 from '../../../assets/images/bg-pictures/tablet/tablet_vector_2.png';\nimport tablet_vector_3 from '../../../assets/images/bg-pictures/tablet/tablet_vector_3.png';\nimport tablet_vector_4 from '../../../assets/images/bg-pictures/tablet/tablet_vector_4.png';\nimport tablet_vector_5 from '../../../assets/images/bg-pictures/tablet/tablet_vector_5.png';\nimport tablet_vector_6 from '../../../assets/images/bg-pictures/tablet/tablet_vector_6.png';\nimport desktop_vector_1 from '../../../assets/images/bg-pictures/desktop/desktop_vector_1.png';\nimport desktop_vector_2 from '../../../assets/images/bg-pictures/desktop/desktop_vector_2.png';\nimport desktop_vector_3 from '../../../assets/images/bg-pictures/desktop/desktop_vector_3.png';\nimport { device } from 'styles/device';\nimport { BiShow } from 'react-icons/bi';\nimport { BiHide } from 'react-icons/bi';\n\nexport const SectionLoginForm = styled.section`\n  min-height: calc(100vh - 100px);\n\n  background-color: ${props => props.theme.backgrounds.input};\n\n  background-image: url(${register_bg_step1_mob});\n\n  background-size: 'contain';\n  background-position: left 50% bottom 0px;\n  background-repeat: no-repeat;\n\n  @media ${device.tablet} {\n    min-height: calc(100vh - 272px);\n    margin-top: 204px;\n\n    background-image: url(${tablet_vector_3}), url(${tablet_vector_2}),\n      url(${tablet_vector_4}), url(${tablet_vector_1}), url(${tablet_vector_5}),\n      url(${tablet_vector_6});\n\n    background-position: left 0 bottom 0, right 0 bottom 0, right 0 bottom 0,\n      right 0 bottom 0, left 163px bottom 163px, left 24px bottom 256px;\n  }\n\n  @media ${device.desktop} {\n    min-height: calc(100vh - 152px);\n    margin-top: 80px;\n\n    background-image: url(${desktop_vector_1}), url(${desktop_vector_2}),\n      url(${desktop_vector_3}), url(${tablet_vector_5}), url(${tablet_vector_6});\n\n    background-position: right 305px bottom 0, right 96px bottom 0,\n      right 0 bottom 0, left 258px bottom 131px, left 32px bottom 248px;\n  }\n`;\n\nexport const LoginFormContainer = styled.div`\n  max-width: 320px;\n  padding: 0px 20px;\n\n  margin: 0px auto;\n\n  text-align: center;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media ${device.tablet} {\n    max-width: 768px;\n    padding: 0px 80px;\n  }\n\n  @media ${device.desktop} {\n    max-width: 1280px;\n    padding: 0px 331px;\n  }\n`;\n\nexport const LoginFormBox = styled.div`\n  @media ${device.tablet} {\n    background-color: ${props => props.theme.backgrounds.bodySecondary};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding-top: 60px;\n    padding-bottom: 40px;\n    padding-right: 80px;\n    padding-left: 80px;\n  }\n\n  @media ${device.desktop} {\n    padding-bottom: 60px;\n  }\n`;\n\nexport const LoginTitle = styled.h1`\n  margin-bottom: 40px;\n  font-family: 'Manrope700';\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.primary};\n\n  @media ${device.tablet} {\n    font-family: 'Manrope500';\n    font-size: 36px;\n    line-height: 49px;\n  }\n\n  @media ${device.desktop} {\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  font-family: 'Manrope400';\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  width: 100%;\n  margin-top: 16px;\n  padding-top: 11px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  padding-right: 56px;\n  color: ${props => props.theme.fontColors.inputTextColor};\n  outline: none;\n  background-color: ${props => props.theme.backgrounds.input};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n\n  transition: transform ${props => props.theme.transition.first};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n    border: 1px solid ${p => p.theme.hoverButtonColor.primary};\n  }\n\n  @media ${device.tablet} {\n    font-size: 18px;\n    line-height: 25px;\n    padding-top: 14px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n  }\n`;\n\nexport const WrapInputPassword = styled.div`\n  position: relative;\n`;\n\nexport const ShowPasswordIcon = styled(BiShow)`\n  position: absolute;\n  right: 20px;\n  top: 8.5px;\n  color: #f59256;\n  width: 26px;\n  height: 26px;\n  @media ${device.tablet} {\n    top: 10px;\n\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const HidePasswordIcon = styled(BiHide)`\n  position: absolute;\n  right: 20px;\n  top: 8.5px;\n  color: #f59256;\n  width: 26px;\n  height: 26px;\n  @media ${device.tablet} {\n    top: 10px;\n\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const LoginSubmitBtn = styled.button`\n  font-family: 'Manrope500';\n  margin-top: 40px;\n  width: 100%;\n  color: ${props => props.theme.fontColors.white};\n  background-color: ${props => props.theme.backgrounds.buttonPrimary};\n  border-radius: 40px;\n  padding-top: 6.5px;\n  padding-bottom: 6.5px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  outline: none;\n  border: 2px solid #f59256;\n  transition: transform ${props => props.theme.transition.first};\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    border: 2px solid ${p => p.theme.hoverButtonColor.primary};\n  }\n\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 10.5px;\n    padding-bottom: 10.5px;\n  }\n`;\n\nexport const LoginBoxText = styled.div`\n  margin-top: 40px;\n`;\n\nexport const LoginLinkText = styled.p`\n  margin-bottom: 10px;\n  font-family: 'Manrope400';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.inputTextColor};\n`;\n\nexport const LoginLink = styled(NavLink)`\n  color: ${props => props.theme.fontColors.blueLink};\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { logIn } from 'redux/auth/authOperations';\nimport { useState } from 'react';\n\nimport { loginSchema, FormError } from 'Validations/LoginValidation';\n\nimport {\n  LoginFormContainer,\n  FormInput,\n  SectionLoginForm,\n  LoginTitle,\n  LoginLinkText,\n  LoginBoxText,\n  LoginLink,\n  LoginSubmitBtn,\n  LoginFormBox,\n  WrapInputPassword,\n  ShowPasswordIcon,\n  HidePasswordIcon,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const toogleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = values => {\n    const body = {\n      email: values.email,\n      password: values.password,\n    };\n\n    dispatch(logIn(body));\n  };\n\n  return (\n    <SectionLoginForm>\n      <LoginFormContainer>\n        <LoginFormBox>\n          <LoginTitle>Login</LoginTitle>\n          <Formik\n            initialValues={initialState}\n            validationSchema={loginSchema}\n            onSubmit={handleSubmit}\n          >\n            {() => (\n              <Form autoComplete=\"off\">\n                <FormInput\n                  id={emailInputId}\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  autoComplete=\"on\"\n                />\n                <FormError name=\"email\" />\n                <WrapInputPassword>\n                  <FormInput\n                    id={passwordInputId}\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    type={showPassword ? 'text' : 'password'}\n                    autoComplete=\"off\"\n                  />\n                  {showPassword ? (\n                    <HidePasswordIcon onClick={toogleShowPassword} />\n                  ) : (\n                    <ShowPasswordIcon onClick={toogleShowPassword} />\n                  )}\n                </WrapInputPassword>\n                <FormError name=\"password\" />\n                <LoginSubmitBtn type=\"submit\">Login</LoginSubmitBtn>\n              </Form>\n            )}\n          </Formik>\n          <LoginBoxText>\n            <LoginLinkText>\n              Don't have an account?{' '}\n              <LoginLink to=\"/register\">Register</LoginLink>\n            </LoginLinkText>\n          \n            <LoginLinkText>\n              Don't remember password?{' '}\n              <LoginLink to=\"/password\">Click here</LoginLink>\n            </LoginLinkText>\n          </LoginBoxText>\n        </LoginFormBox>\n      </LoginFormContainer>\n    </SectionLoginForm>\n  );\n};\n","import { LoginForm } from 'components/Auth/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <main>\n      <title>Login</title>\n      <LoginForm />\n    </main>\n  );\n};\nexport default LoginPage;\n"],"names":["ErrorText","styled","loginSchema","yup","shape","email","required","password","passwordSchema","FormError","name","message","ErrorMessage","render","SectionLoginForm","props","theme","backgrounds","input","register_bg_step1_mob","device","tablet_vector_3","tablet_vector_2","tablet_vector_4","tablet_vector_1","tablet_vector_5","tablet_vector_6","desktop_vector_1","desktop_vector_2","desktop_vector_3","LoginFormContainer","LoginFormBox","bodySecondary","LoginTitle","fonts","letterSpacing","fontColors","primary","FormInput","Field","inputTextColor","transition","first","p","hoverButtonColor","WrapInputPassword","ShowPasswordIcon","BiShow","HidePasswordIcon","BiHide","LoginSubmitBtn","white","buttonPrimary","LoginBoxText","LoginLinkText","LoginLink","NavLink","blueLink","LoginForm","useState","showPassword","setShowPassword","emailInputId","nanoid","passwordInputId","dispatch","useDispatch","toogleShowPassword","Formik","initialValues","validationSchema","onSubmit","values","body","logIn","Form","autoComplete","id","placeholder","type","onClick","to"],"sourceRoot":""}