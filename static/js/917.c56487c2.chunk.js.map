{"version":3,"file":"static/js/917.c56487c2.chunk.js","mappings":"8NAIaA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,QAAlB,EAEzBC,EAAU,SAAAH,GAAK,OAAIA,EAAMI,KAAKC,KAAf,E,6BCHdC,EAAkBC,EAAAA,GAAAA,QAAH,iGAEhBC,EAAAA,EAAAA,QAKCC,EAAWF,EAAAA,GAAAA,GAAH,0KAGRC,EAAAA,EAAAA,Q,uCCVDE,EAAOH,EAAAA,GAAAA,GAAH,2RAUNC,EAAAA,EAAAA,QAKEG,EAAOJ,EAAAA,GAAAA,IAAH,sFAKJK,EAAUL,EAAAA,GAAAA,IAAH,+CAIPM,EAAgBN,EAAAA,GAAAA,EAAH,mTAebO,EAAMP,EAAAA,GAAAA,IAAH,gFAMHQ,EAAYR,EAAAA,GAAAA,IAAH,sHAQTS,EAAQT,EAAAA,GAAAA,GAAH,sIAQLU,EAAKV,EAAAA,GAAAA,GAAH,iKAQFW,EAAKX,EAAAA,GAAAA,GAAH,0CAGFY,EAAQZ,EAAAA,GAAAA,EAAH,2DAKLa,EAAOb,EAAAA,GAAAA,EAAH,uEAIJc,EAAWd,EAAAA,GAAAA,IAAH,iL,SCrERe,EAAqB,SAAC,GAAW,IAAVC,EAAS,EAATA,IAClC,OACE,UAACb,EAAD,YACI,UAACE,EAAD,YACA,SAACC,EAAD,UAAgBU,EAAIrB,YAClB,SAACY,EAAD,CAAKU,IAAKD,EAAIE,UAAWC,IAAKH,EAAII,KAAMC,QAAQ,aAGlD,UAACjB,EAAD,YACE,UAACI,EAAD,YACE,SAACC,EAAD,qBACA,UAACC,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAOG,EAAIM,UAFb,UAAYN,EAAIO,GAAhB,YAIA,UAACZ,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAOG,EAAIQ,UAFb,UAAYR,EAAIO,GAAhB,YAIA,UAACZ,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,UAAOG,EAAIS,gBAFb,UAAYT,EAAIO,GAAhB,gBAMJ,SAACT,EAAD,SAMT,ECOD,EA3C4B,WAE1B,IAAMY,GAAWC,EAAAA,EAAAA,MACX9B,GAAO+B,EAAAA,EAAAA,IAAYhC,GACnBiC,GAAiBD,EAAAA,EAAAA,IAAYpC,GAC7BsC,GAAWC,EAAAA,EAAAA,MAEjBC,QAAQC,IAAIH,EAASI,UAErBR,GAASS,EAAAA,EAAAA,GAAgBL,EAASI,WAElC,IAAIvC,EAAW,OAkBf,MAhBuB,wBAAnBkC,EACFlC,EAAW,aACiB,kBAAnBkC,EACTlC,EAAW,OACiB,2BAAnBkC,EACTlC,EAAW,gBAEXqC,QAAQC,IAAI,gBAIdG,EAAAA,EAAAA,YAAU,WACRV,GAASW,EAAAA,EAAAA,GAAW1C,GACrB,GAAE,CAAC+B,EAAS/B,KAIX,SAACI,EAAD,WACA,SAACG,EAAD,UACGL,EAAKyC,KAAI,SAACtB,EAAIuB,GAAL,OACR,SAACxB,EAAD,CAA+BC,IAAKA,GAAXuB,EADjB,OAOf,C","sources":["redux/selectors.js","components/Notices/NoticesCategoryList/NoticesCategoryList.styled.js","components/Notices/NoticeCategoryItem/NoticeCategoryItem.styled.js","components/Notices/NoticeCategoryItem/NoticeCategoryItem.js","components/Notices/NoticesCategoryList/NoticesCategoryList.js"],"sourcesContent":["// import { createSelector } from \"@reduxjs/toolkit\";\n// import { categoryFilters } from \"./constants\";\n\n\nexport const getCategoryFilter = state => state.filters.category;\n\nexport const getPets = state => state.pets.items;\n\n\n// export const selectVisiblePets = createSelector(\n//   [getPets, getCategoryFilter],\n//     (pets, statusFilter) => {\n//         console.log('pets',pets)\n      \n//    switch (statusFilter) {\n//     case categoryFilters.sell:\n//       return pets.filter(pet => pet.category==='sell');\n//     case categoryFilters.lostFound:\n//       return pets.filter(pet => pet.category==='lost/found');\n//     case categoryFilters.inGoodHands:\n//       return pets.filter(pet => pet.category==='in good hands');\n//     default:\n//       return pets;\n//     }\n//   }\n// );","import styled from 'styled-components';\nimport { device } from '../../../styles/device';\n\n export const PetsListSection = styled.section`\n  padding-top:30px;\n    @media ${device.tablet} { \n        padding-top:60px;\n  }\n\n`;\n export const PetsList = styled.ul`\n  margin-bottom: 32px;   \n\n     @media ${device.tablet} {\n        display: flex;   \n        flex-wrap:wrap;    \n        margin-left: -32px;\n        }\n}\n`;\n \n","import styled from 'styled-components';\nimport { device } from '../../../styles/device';\n\nexport const Item = styled.li`\n  margin-right: 32px;\n  height: 100%;\n  color: #111111;\n  background-color: #ffffff;\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  border-radius: 0px 0px 40px 40px;\n  overflow-wrap: break-word;\n  \n\n  @media ${device.tablet} {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\nexport const ImgWrap = styled.div`\n  position: relative;\n`;\n\nexport const CategoryLabel = styled.p`\n  position: absolute;\n  top: 20px;\n  left: 0;\n  z-index: 1;\n  padding: 6px 0;\n  width: 158px;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  text-align: center;\n  background: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(2px);\n  border-radius: 0px 40px 40px 0px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 288px;\n  object-fit: cover;\n`;\n\nexport const WrapInner = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  gap: 20px;\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 28px;\n  line-height: calc(38 / 28);\n  height: 76px;\n  overflow: hidden;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n`;\nexport const Li = styled.li`\n  display: flex;\n`;\nexport const Lable = styled.p`\n  width: 90px;\n  flex-shrink: 0;\n`;\n\nexport const Text = styled.p`\n  @media screen and (min-width: 768px) {\n  }\n`;\nexport const ThumbBtn = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  gap: 12px;\n  padding-bottom: 12px;\n`;\n","import {\n  Item,\n  Wrap,\n  ImgWrap,\n  CategoryLabel,\n  Img,\n  WrapInner,\n  Title,\n  Ul,\n  Li,\n  Lable,\n  Text,\n  ThumbBtn,\n} from './NoticeCategoryItem.styled';\n\nexport const NoticeCategoryItem = ({pet}) => {\n  return (\n    <Item>\n        <ImgWrap>\n        <CategoryLabel>{pet.category}</CategoryLabel>\n          <Img src={pet.avatarURL} alt={pet.name} loading=\"lazy\" />\n          {/* <FavoriteBtn/> */}\n        </ImgWrap>\n        <Wrap>\n          <WrapInner>\n            <Title>title</Title>\n            <Ul>\n              <Li key={`${pet.id}+breed`}>\n                <Lable>Breed:</Lable>\n                <Text>{pet.breed}</Text>\n              </Li>\n              <Li key={`${pet.id}+place`}>\n                <Lable>Place:</Lable>\n                <Text>{pet.place}</Text>\n              </Li>\n              <Li key={`${pet.id}+age`}>\n                <Lable>Age:</Lable>\n                <Text>{pet.dateofbirth}</Text>\n              </Li>\n            </Ul>\n          </WrapInner>\n          <ThumbBtn>\n            {/* <LearnMoreBtn/> */}\n          </ThumbBtn>\n        </Wrap>\n      </Item>\n  );\n};","\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { getPets,getCategoryFilter } from \"redux/selectors\";\nimport { PetsListSection,PetsList } from \"./NoticesCategoryList.styled\";\nimport { useEffect } from \"react\";\nimport { fetchTasks } from \"redux/operations\"\nimport { useLocation } from \"react-router-dom\";\nimport { setStatusFilter } from \"redux/filtersSlice\";\nimport { NoticeCategoryItem } from \"../NoticeCategoryItem/NoticeCategoryItem\";\n\n\nconst NoticesCategoryList = () => {\n  \n  const dispatch = useDispatch();\n  const pets = useSelector(getPets);\n  const categoryFilter = useSelector(getCategoryFilter);\n  const location = useLocation();  \n  \n  console.log(location.pathname);\n\n  dispatch(setStatusFilter(location.pathname))\n\n  let category = 'sell';\n\n  if (categoryFilter === '/notices/lost-found') {\n    category = 'lost-found'\n  } else if (categoryFilter === '/notices/sell') {\n    category = 'sell'\n  } else if (categoryFilter === '/notices/in-good-hands') {\n    category = 'in-good-hands'\n  } else {\n    console.log('no category')\n  }\n  \n\n  useEffect(() => {\n    dispatch(fetchTasks(category));\n  }, [dispatch,category])\n\n  \n  return (\n    <PetsListSection>\n    <PetsList>\n      {pets.map((pet,idx) => (\n        <NoticeCategoryItem key={idx}  pet={pet}/>\n\n      ))}\n      </PetsList>\n    </PetsListSection>\n    );\n};\n\n\n\nexport default NoticesCategoryList;"],"names":["getCategoryFilter","state","filters","category","getPets","pets","items","PetsListSection","styled","device","PetsList","Item","Wrap","ImgWrap","CategoryLabel","Img","WrapInner","Title","Ul","Li","Lable","Text","ThumbBtn","NoticeCategoryItem","pet","src","avatarURL","alt","name","loading","breed","id","place","dateofbirth","dispatch","useDispatch","useSelector","categoryFilter","location","useLocation","console","log","pathname","setStatusFilter","useEffect","fetchTasks","map","idx"],"sourceRoot":""}