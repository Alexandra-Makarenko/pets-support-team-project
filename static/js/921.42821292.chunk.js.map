{"version":3,"file":"static/js/921.42821292.chunk.js","mappings":"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","sources":["Validations/AuthErrorMessage.styled.js","Validations/LoginValidation.js","components/Auth/forgotPassword/LoginForm.styled.js","components/Auth/forgotPassword/forgotPassword.js","pages/ForgotPassword/ForgotPasswordPage.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  font-family: 'Manrope400';\n  display: block;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: 0.04em;\n  margin-top: 4px;\n  color: red;\n`;\n","import { ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ErrorText } from './AuthErrorMessage.styled';\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email is a required field'),\n  password: yup.string().required('Password is a required field'),\n});\n\nexport const passwordSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email is a required field')\n});\n\nexport const FormError = ({ name, message }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport register_bg_step1_mob from '../../../assets/images/bg-pictures/mobile/register_bg_step1_mob.png';\nimport tablet_vector_1 from '../../../assets/images/bg-pictures/tablet/tablet_vector_1.png';\nimport tablet_vector_2 from '../../../assets/images/bg-pictures/tablet/tablet_vector_2.png';\nimport tablet_vector_3 from '../../../assets/images/bg-pictures/tablet/tablet_vector_3.png';\nimport tablet_vector_4 from '../../../assets/images/bg-pictures/tablet/tablet_vector_4.png';\nimport tablet_vector_5 from '../../../assets/images/bg-pictures/tablet/tablet_vector_5.png';\nimport tablet_vector_6 from '../../../assets/images/bg-pictures/tablet/tablet_vector_6.png';\nimport desktop_vector_1 from '../../../assets/images/bg-pictures/desktop/desktop_vector_1.png';\nimport desktop_vector_2 from '../../../assets/images/bg-pictures/desktop/desktop_vector_2.png';\nimport desktop_vector_3 from '../../../assets/images/bg-pictures/desktop/desktop_vector_3.png';\nimport { device } from 'styles/device';\n\nexport const SectionLoginForm = styled.section`\n  min-height: calc(100vh - 100px);\n\n  background-color: ${props => props.theme.backgrounds.input};\n\n  background-image: url(${register_bg_step1_mob});\n\n  background-size: 'contain';\n  background-position: left 50% bottom 0px;\n  background-repeat: no-repeat;\n\n  @media ${device.tablet} {\n    min-height: calc(100vh - 272px);\n    margin-top: 204px;\n\n    background-image: url(${tablet_vector_3}), url(${tablet_vector_2}),\n      url(${tablet_vector_4}), url(${tablet_vector_1}), url(${tablet_vector_5}),\n      url(${tablet_vector_6});\n\n    background-position: left 0 bottom 0, right 0 bottom 0, right 0 bottom 0,\n      right 0 bottom 0, left 163px bottom 163px, left 24px bottom 256px;\n  }\n\n  @media ${device.desktop} {\n    min-height: calc(100vh - 152px);\n    margin-top: 80px;\n\n    background-image: url(${desktop_vector_1}), url(${desktop_vector_2}),\n      url(${desktop_vector_3}), url(${tablet_vector_5}), url(${tablet_vector_6});\n\n    background-position: right 305px bottom 0, right 96px bottom 0,\n      right 0 bottom 0, left 258px bottom 131px, left 32px bottom 248px;\n  }\n`;\n\nexport const LoginFormContainer = styled.div`\n  max-width: 320px;\n  padding: 0px 20px;\n  /* margin-bottom: ${props =>\n    props.currentStep === 0 ? `266px` : `223px`}; */\n  /* padding-left: 20px;\n  padding-right: 20px; */\n  margin: 0px auto;\n  /* margin-left: auto;\n  margin-right: auto; */\n  text-align: center;\n  padding-left: 20px;\n  padding-right: 20px;\n  /* padding-bottom: ${props =>\n    props.currentStep === 0 ? `103px` : `59px`}; */\n\n  @media ${device.tablet} {\n    max-width: 768px;\n    padding: 0px 80px;\n  }\n\n  @media ${device.desktop} {\n    max-width: 1280px;\n    padding: 0px 331px;\n  }\n`;\n\nexport const LoginFormBox = styled.div`\n  @media ${device.tablet} {\n    background-color: ${props => props.theme.backgrounds.bodySecondary};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding-top: 60px;\n    padding-bottom: 40px;\n    padding-right: 80px;\n    padding-left: 80px;\n  }\n\n  @media ${device.desktop} {\n    padding-bottom: 60px;\n  }\n`;\n\nexport const LoginTitle = styled.h1`\n  margin-bottom: 40px;\n  font-family: 'Manrope700';\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.primary};\n\n  @media ${device.tablet} {\n    font-family: 'Manrope500';\n    font-size: 36px;\n    line-height: 49px;\n  }\n\n  @media ${device.desktop} {\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  font-family: 'Manrope400';\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  width: 100%;\n  margin-top: 16px;\n  padding-top: 11px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  color: ${props => props.theme.fontColors.inputTextColor};\n  outline: none;\n  background-color: ${props => props.theme.backgrounds.input};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n\n  @media ${device.tablet} {\n    font-size: 18px;\n    line-height: 25px;\n    padding-top: 14px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n  }\n\n  @media ${device.desktop} {\n  }\n`;\n\nexport const LoginSubmitBtn = styled.button`\n  font-family: 'Manrope500';\n  margin-top: 40px;\n  width: 100%;\n  color: ${props => props.theme.fontColors.white};\n  background-color: ${props => props.theme.backgrounds.buttonPrimary};\n  border-radius: 40px;\n  padding-top: 8.5px;\n  padding-bottom: 8.5px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  outline: none;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 10.5px;\n    padding-bottom: 10.5px;\n  }\n`;\n\nexport const LoginBoxText = styled.div`\n  margin-top: 40px;\n`;\n\nexport const LoginLinkText = styled.p`\n  font-family: 'Manrope400';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.inputTextColor};\n`;\n\nexport const LoginLink = styled(NavLink)`\n  color: ${props => props.theme.fontColors.blueLink};\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { password } from 'redux/auth/authOperations';\nimport { passwordSchema, FormError } from 'Validations/LoginValidation';\nimport {\n  LoginFormContainer,\n  FormInput,\n  SectionLoginForm,\n  LoginTitle,\n  LoginLinkText,\n  LoginBoxText,\n  //   LoginLink,\n  LoginSubmitBtn,\n  LoginFormBox,\n} from './LoginForm.styled';\n\nexport const ForgotPassword = () => {\n  const dispatch = useDispatch();\n\n  const emailInputId = nanoid();\n\n  const initialState = {\n    email: '',\n  };\n\n  const handleSubmit = values => {\n    const body = {\n      email: values.email,\n    };\n    console.log('Form Submitted', body);\n    dispatch(password(body));\n  };\n\n  return (\n    <SectionLoginForm>\n      <LoginFormContainer>\n        <LoginFormBox>\n          <LoginTitle>Password recovery</LoginTitle>\n          <Formik\n            initialValues={initialState}\n            validationSchema={passwordSchema}\n            onSubmit={handleSubmit}\n          >\n            {({ isValid, dirty }) => (\n              <Form autoComplete=\"off\">\n                <FormInput\n                  id={emailInputId}\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  autoComplete=\"on\"\n                />\n                <FormError name=\"email\" />\n\n                <LoginSubmitBtn type=\"submit\">Submit</LoginSubmitBtn>\n              </Form>\n            )}\n          </Formik>\n          <LoginBoxText>\n            <LoginLinkText>\n              Check your email. You will find there your new password\n            </LoginLinkText>\n          </LoginBoxText>\n        </LoginFormBox>\n      </LoginFormContainer>\n    </SectionLoginForm>\n  );\n};\n","import { ForgotPassword } from 'components/Auth/forgotPassword/forgotPassword';\n\nconst ForgotPasswordPage = () => {\n  return (\n    <main>\n      <title>Password recovery</title>\n      <ForgotPassword />\n    </main>\n  );\n};\nexport default ForgotPasswordPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ErrorText","styled","loginSchema","yup","shape","email","required","password","passwordSchema","FormError","name","message","ErrorMessage","render","SectionLoginForm","props","theme","backgrounds","input","register_bg_step1_mob","device","tablet_vector_3","tablet_vector_2","tablet_vector_4","tablet_vector_1","tablet_vector_5","tablet_vector_6","desktop_vector_1","desktop_vector_2","desktop_vector_3","LoginFormContainer","currentStep","LoginFormBox","bodySecondary","LoginTitle","fonts","letterSpacing","fontColors","primary","FormInput","Field","inputTextColor","LoginSubmitBtn","white","buttonPrimary","LoginBoxText","LoginLinkText","NavLink","blueLink","ForgotPassword","dispatch","useDispatch","emailInputId","nanoid","Formik","initialValues","validationSchema","onSubmit","values","body","console","log","isValid","dirty","Form","autoComplete","id","placeholder","type","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}