{"version":3,"file":"static/js/317.f2c8f568.chunk.js","mappings":"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","sources":["Validations/AuthErrorMessage.styled.js","Validations/RegisterValidation.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.js","styles/device.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  display: block;\n  margin-top: 4px;\n  color: red;\n`;\n","import { ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ErrorText } from './AuthErrorMessage.styled';\n\nconst nameRules = /^[aA-zZ\\s]+$/;\nconst passwordRules = /^(\\S+$)/g;\nconst emailRules = /^(?!.*@[^,]*,)/;\n\nexport const stepOneReqisterSchema = yup.object().shape({\n  email: yup\n    .string()\n    .min(10, 'Minimum number of characters 10')\n    .max(63, 'Password is too long')\n    .email('Please enter a valid email')\n    .matches(emailRules, 'Only alphabets are allowed for this field ')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(7, 'Password is too short')\n    .max(32, 'Password is too long')\n    .matches(passwordRules, 'Any characters except spaces')\n    // .matches(passwordRules, { message: 'Please create a stronger password' })\n    .required('Password is a required field'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Please enter the password again'),\n});\n\nexport const stepTwoReqisterSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Minimum number of characters 2')\n    .max(16, 'Maximum number of characters 16')\n    .matches(nameRules, 'Only alphabets are allowed for this field ')\n    .required('Name is a required field'),\n  region: yup.string().required('Required'),\n  phone: yup\n    .string()\n    // .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Required'),\n});\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport register_bg_step1_mob from '../../../assets/images/bg-pictures/mobile/register_bg_step1_mob.png';\nimport register_bg_step2_mob from '../../../assets/images/bg-pictures/mobile/register_bg_step2_mob.png';\nimport tablet_vector_1 from '../../../assets/images/bg-pictures/tablet/tablet_vector_1.png';\nimport tablet_vector_2 from '../../../assets/images/bg-pictures/tablet/tablet_vector_2.png';\nimport tablet_vector_3 from '../../../assets/images/bg-pictures/tablet/tablet_vector_3.png';\nimport tablet_vector_4 from '../../../assets/images/bg-pictures/tablet/tablet_vector_4.png';\nimport tablet_vector_5 from '../../../assets/images/bg-pictures/tablet/tablet_vector_5.png';\nimport tablet_vector_6 from '../../../assets/images/bg-pictures/tablet/tablet_vector_6.png';\nimport desktop_vector_1 from '../../../assets/images/bg-pictures/desktop/desktop_vector_1.png';\nimport desktop_vector_2 from '../../../assets/images/bg-pictures/desktop/desktop_vector_2.png';\nimport desktop_vector_3 from '../../../assets/images/bg-pictures/desktop/desktop_vector_3.png';\nimport { device } from 'styles/device';\n\nexport const SectionRegisterForm = styled.section`\n  height: 100%;\n  padding-top: 42px;\n  padding-bottom: ${props => (props.currentStep === 0 ? `103px` : `59px`)};\n  background-color: ${props => props.theme.backgrounds.input};\n\n  background-image: ${props =>\n    props.currentStep === 0\n      ? `url(${register_bg_step1_mob})`\n      : `url(${register_bg_step2_mob})`};\n\n  background-size: 'contain';\n  background-position: left 50% bottom 0px;\n  background-repeat: no-repeat;\n\n  @media ${device.tablet} {\n    padding-top: 169px;\n    padding-bottom: ${props => (props.currentStep === 0 ? `266px` : `223px`)};\n    background-image: url(${tablet_vector_3}), url(${tablet_vector_2}),\n      url(${tablet_vector_4}), url(${tablet_vector_1}), url(${tablet_vector_5}),\n      url(${tablet_vector_6});\n\n    background-position: left 0 bottom 0, right 0 bottom 0, right 0 bottom 0,\n      right 0 bottom 0, left 163px bottom 163px, left 24px bottom 256px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 46px;\n    padding-bottom: ${props => (props.currentStep === 0 ? `113px` : `51px`)};\n    background-image: url(${desktop_vector_1}), url(${desktop_vector_2}),\n      url(${desktop_vector_3}), url(${tablet_vector_5}), url(${tablet_vector_6});\n\n    background-position: right 305px bottom 0, right 96px bottom 0,\n      right 0 bottom 0, left 258px bottom 131px, left 32px bottom 248px;\n  }\n`;\n\nexport const RegisterFormContainer = styled.div`\n  max-width: 320px;\n  /* margin-bottom: ${props =>\n    props.currentStep === 0 ? `266px` : `223px`}; */\n  /* padding-left: 20px;\n  padding-right: 20px; */\n  margin: 0px auto;\n  /* margin-left: auto;\n  margin-right: auto; */\n  text-align: center;\n  padding-left: 20px;\n  padding-right: 20px;\n  /* padding-bottom: ${props =>\n    props.currentStep === 0 ? `103px` : `59px`}; */\n\n  @media ${device.tablet} {\n    max-width: 768px;\n    padding: 0px 80px;\n  }\n\n  @media ${device.desktop} {\n    max-width: 1280px;\n    padding: 0px 331px;\n  }\n`;\n\nexport const RegisterFormBox = styled.div`\n  @media ${device.tablet} {\n    background-color: ${props => props.theme.backgrounds.bodySecondary};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    padding-top: 60px;\n    padding-bottom: 40px;\n    padding-right: 80px;\n    padding-left: 80px;\n  }\n\n  @media ${device.desktop} {\n    padding-bottom: 60px;\n  }\n`;\n\nexport const RegisterTitle = styled.h1`\n  margin-bottom: 40px;\n  font-family: 'Manrope700';\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.primary};\n\n  @media ${device.tablet} {\n    font-family: 'Manrope500';\n    font-size: 36px;\n    line-height: 49px;\n  }\n\n  @media ${device.desktop} {\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  font-family: 'Manrope400';\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  width: 100%;\n  margin-top: 16px;\n  padding-top: 11px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  color: ${props => props.theme.fontColors.inputTextColor};\n  outline: none;\n  background-color: ${props => props.theme.backgrounds.input};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n\n  @media ${device.tablet} {\n    font-family: 'Manrope400';\n    font-size: 18px;\n    line-height: 25px;\n    padding-top: 14px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n  }\n\n  @media ${device.desktop} {\n  }\n`;\n\nexport const NextFormRegisterBtn = styled.button`\n  font-family: 'Manrope500';\n  margin-top: ${props => (props.currentStep === 0 ? '40px' : '28px')};\n  width: 100%;\n  color: ${props => props.theme.fontColors.white};\n  background-color: ${props => props.theme.backgrounds.buttonPrimary};\n  border-radius: 40px;\n  padding-top: 8.5px;\n  padding-bottom: 8.5px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  outline: none;\n  border: none;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 10.5px;\n    padding-bottom: 10.5px;\n  }\n`;\n\nexport const BackFormRegisterBtn = styled.button`\n  font-family: 'Manrope500';\n  margin-top: 12px;\n  width: 100%;\n  color: ${props => props.theme.fontColors.secondary};\n  background-color: ${props => props.theme.backgrounds.bodyPrimary};\n  border: 2px solid #f59256;\n  border-radius: 40px;\n  padding-top: 8.5px;\n  padding-bottom: 8.5px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  outline: none;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  @media ${device.tablet} {\n    margin-top: 16px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 10.5px;\n    padding-bottom: 10.5px;\n  }\n`;\n\nexport const RegisterBoxText = styled.div`\n  margin-top: 40px;\n`;\n\nexport const RegisterLinkText = styled.p`\n  font-family: 'Manrope400';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: ${props => props.theme.fonts.letterSpacing};\n  color: ${props => props.theme.fontColors.inputTextColor};\n`;\n\nexport const ReqisterLoginLink = styled(NavLink)`\n  color: ${props => props.theme.fontColors.blueLink};\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { register } from 'redux/auth/authOperations';\n// import PhoneInput from 'react-phone-input-2';\n// import * as yup from 'yup';\n\nimport {\n  stepOneReqisterSchema,\n  stepTwoReqisterSchema,\n  FormError,\n} from 'Validations/RegisterValidation';\n\nimport {\n  RegisterFormContainer,\n  FormInput,\n  NextFormRegisterBtn,\n  SectionRegisterForm,\n  RegisterTitle,\n  RegisterLinkText,\n  RegisterBoxText,\n  ReqisterLoginLink,\n  BackFormRegisterBtn,\n  RegisterFormBox,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [userData, setUserData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    region: '',\n    phone: '',\n  });\n\n  const [currentStep, setCurrentStep] = useState(0);\n  // const [errors, setErrors] = useState({});\n\n  const makeRequest = formData => {\n    const body = {\n      email: formData.email,\n      password: formData.password,\n      name: formData.name,\n      place: formData.region,\n      phone: formData.phone,\n    };\n    console.log('Form Submitted', body);\n    dispatch(register(body));\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setUserData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setUserData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const registerSteps = [\n    <RegisterStepOne\n      currentStep={currentStep}\n      nextStep={handleNextStep}\n      userData={userData}\n    />,\n    <RegisterStepTwo\n      currentStep={currentStep}\n      nextStep={handleNextStep}\n      prevStep={handlePrevStep}\n      userData={userData}\n    />,\n  ];\n\n  // console.log('data', userData);\n\n  return (\n    <SectionRegisterForm currentStep={currentStep}>\n      {registerSteps[currentStep]}\n    </SectionRegisterForm>\n  );\n};\n\nconst RegisterStepOne = props => {\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const confirmPasswordInputId = nanoid();\n\n  const handleSubmit = values => {\n    props.nextStep(values);\n  };\n\n  return (\n    <RegisterFormContainer>\n      <RegisterFormBox>\n        <RegisterTitle>Registration</RegisterTitle>\n        <Formik\n          initialValues={props.userData}\n          validationSchema={stepOneReqisterSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isValid, dirty }) => (\n            <Form autoComplete=\"off\">\n              <FormInput\n                id={emailInputId}\n                // label=\"Email\"\n                // variant=\"outlined\"\n                name=\"email\"\n                placeholder=\"Email\"\n                // type=\"email\"\n                autoComplete=\"off\"\n                // required\n              />\n              <FormError name=\"email\" />\n              <FormInput\n                id={passwordInputId}\n                // label=\"Password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                // required\n                // error={Boolean(errors.name) && Boolean(touched.name)}\n                // helperText={Boolean(touched.name) && errors.name}\n              />\n              <FormError name=\"password\" />\n              <FormInput\n                id={confirmPasswordInputId}\n                // label=\"Password\"\n                // variant=\"outlined\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                // required\n                // error={Boolean(errors.name) && Boolean(touched.name)}\n                // helperText={Boolean(touched.name) && errors.name}\n              />\n              <FormError name=\"confirmPassword\" />\n              <NextFormRegisterBtn\n                currentStep={props.currentStep}\n                type=\"submit\"\n              >\n                Next\n              </NextFormRegisterBtn>\n            </Form>\n          )}\n        </Formik>\n        <RegisterBoxText>\n          <RegisterLinkText>\n            Already have an account?{' '}\n            <ReqisterLoginLink to=\"/login\">Login</ReqisterLoginLink>\n          </RegisterLinkText>\n        </RegisterBoxText>\n      </RegisterFormBox>\n    </RegisterFormContainer>\n  );\n};\n\nconst RegisterStepTwo = props => {\n  const nameInputId = nanoid();\n  const regionInputId = nanoid();\n  const phoneInputId = nanoid();\n\n  const handleSubmit = values => {\n    props.nextStep(values, true);\n  };\n\n  return (\n    <RegisterFormContainer>\n      <RegisterFormBox>\n        <RegisterTitle>Registration</RegisterTitle>\n        <Formik\n          initialValues={props.userData}\n          validationSchema={stepTwoReqisterSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ values }) => (\n            <Form autoComplete=\"off\">\n              <FormInput\n                id={nameInputId}\n                // label=\"Email\"\n                // variant=\"outlined\"\n                name=\"name\"\n                placeholder=\"Name\"\n                type=\"text\"\n                autoComplete=\"off\"\n                // required\n                // error={Boolean(errors.email) && Boolean(touched.email)}\n                // helperText={Boolean(touched.email) && errors.email}\n              />\n              <FormError name=\"name\" />\n              <FormInput\n                id={regionInputId}\n                // label=\"Password\"\n                name=\"region\"\n                placeholder=\"City, reqion\"\n                type=\"text\"\n                autoComplete=\"off\"\n                // required\n                // error={Boolean(errors.name) && Boolean(touched.name)}\n                // helperText={Boolean(touched.name) && errors.name}\n              />\n              <FormError name=\"region\" />\n              <FormInput\n                id={phoneInputId}\n                // label=\"Password\"\n                // variant=\"outlined\"\n                name=\"phone\"\n                placeholder=\"Mobile phone\"\n                type=\"tel\"\n                autoComplete=\"off\"\n                // required\n                // error={Boolean(errors.name) && Boolean(touched.name)}\n                // helperText={Boolean(touched.name) && errors.name}\n              />\n              <FormError name=\"phone\" />\n\n              <NextFormRegisterBtn\n                currentStep={props.currentStep}\n                type=\"submit\"\n              >\n                Register\n              </NextFormRegisterBtn>\n              <BackFormRegisterBtn\n                type=\"button\"\n                onClick={() => props.prevStep(values)}\n              >\n                Back\n              </BackFormRegisterBtn>\n            </Form>\n          )}\n        </Formik>\n        <RegisterBoxText>\n          <RegisterLinkText>\n            Already have an account?{' '}\n            <ReqisterLoginLink to=\"/login\">Login</ReqisterLoginLink>\n          </RegisterLinkText>\n        </RegisterBoxText>\n      </RegisterFormBox>\n    </RegisterFormContainer>\n  );\n};\n\n// Formik\n// const initialValues = {\n//   email: '',\n//   password: '',\n//   confirmPassword: '',\n// };\n\n// const handleSubmit = (value, actions) => {\n//   const body = {\n//     email: value.email,\n//     password: value.password,\n//     confirmPassword: value.confirmPassword,\n//   };\n\n//   console.log(body);\n//   // dispatch(register(body));\n//   // actions.resetForm();\n//   // setValues({ ...values, password: '' });\n// };\n\n// return (\n//   <SectionRegisterForm>\n//     <RegisterFormContainer>\n//       <RegisterTitle>Registration</RegisterTitle>\n//       <Formik\n//         initialValues={initialValues}\n//         // validationSchema={yup.object().shape({\n//         //   name: yup\n//         //     .string()\n//         //     .required('Please enter name')\n//         //     .min(2, 'Name too short'),\n//         //   email: yup\n//         //     .string()\n//         //     .required('Please enter email')\n//         //     .email('Invalid email'),\n//         //   password: yup\n//         //     .string()\n//         //     .required('Please enter password')\n//         //     .min(7, 'Password should be minimum 7 characters long'),\n//         // })}\n//         onSubmit={handleSubmit}\n//       >\n//         {() => (\n//           <Form autoComplete=\"off\">\n//             <FormInput\n//               id={emailInputId}\n//               // label=\"Email\"\n//               // variant=\"outlined\"\n//               name=\"email\"\n//               placeholder=\"Email\"\n//               // type=\"email\"\n//               autoComplete=\"off\"\n//               // required\n//               // error={Boolean(errors.email) && Boolean(touched.email)}\n//               // helperText={Boolean(touched.email) && errors.email}\n//             />\n//             <FormInput\n//               id={passwordInputId}\n//               // label=\"Password\"\n//               name=\"password\"\n//               placeholder=\"Password\"\n//               type=\"password\"\n//               autoComplete=\"off\"\n//               // required\n//               // error={Boolean(errors.name) && Boolean(touched.name)}\n//               // helperText={Boolean(touched.name) && errors.name}\n//             />\n//             <FormInput\n//               id={confirmPasswordInputId}\n//               // label=\"Password\"\n//               // variant=\"outlined\"\n//               name=\"confirmPassword\"\n//               placeholder=\"Confirm Password\"\n//               type=\"password\"\n//               autoComplete=\"off\"\n//               // required\n//               // error={Boolean(errors.name) && Boolean(touched.name)}\n//               // helperText={Boolean(touched.name) && errors.name}\n//             />\n\n//             <NextFormRegisterBtn type=\"submit\">Next</NextFormRegisterBtn>\n//           </Form>\n//         )}\n//       </Formik>\n//       <RegisterBoxText>\n//         <RegisterLinkText>\n//           Already have an account?{' '}\n//           <ReqisterLoginLink to=\"/about\">Login</ReqisterLoginLink>\n//         </RegisterLinkText>\n//       </RegisterBoxText>\n//       {/* <RegisterBgImg></RegisterBgImg> */}\n//     </RegisterFormContainer>\n//   </SectionRegisterForm>\n// );\n","import { RegisterForm } from 'components/Auth/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <main>\n      <title>Registration</title>\n      <RegisterForm />\n    </main>\n  );\n};\nexport default RegisterPage;\n","const size = {\n  mobile: '320px',\n  mobileTablet: '480px',\n  tablet: '768px',\n  desktop: '1280px',\n  preMobile: '319px',\n  preMobileTablet: '479px',\n  preTablet: '767px',\n  preDesktop: '1279px'\n}\nexport const device = {\n  mobile: `(min-width: ${size.mobile})`,\n  mobileTablet: `(min-width: ${size.mobileTablet})`,\n  tablet: `(min-width: ${size.tablet})`,\n  desktop: `(min-width: ${size.desktop})`,\n  preMobile: `(max-width: ${size.preMobile})`,\n  preMobileTablet: `(max-width: ${size.preMobileTablet})`,\n  preTablet: `(max-width: ${size.preTablet})`,\n  preDesktop: `(max-width: ${size.preDesktop})`\n};"],"names":["ErrorText","styled","stepOneReqisterSchema","yup","shape","email","min","max","matches","required","password","confirmPassword","oneOf","stepTwoReqisterSchema","name","region","phone","FormError","render","message","SectionRegisterForm","props","currentStep","theme","backgrounds","input","register_bg_step1_mob","register_bg_step2_mob","device","tablet_vector_3","tablet_vector_2","tablet_vector_4","tablet_vector_1","tablet_vector_5","tablet_vector_6","desktop_vector_1","desktop_vector_2","desktop_vector_3","RegisterFormContainer","RegisterFormBox","bodySecondary","RegisterTitle","fonts","letterSpacing","fontColors","primary","FormInput","Field","inputTextColor","NextFormRegisterBtn","white","buttonPrimary","BackFormRegisterBtn","secondary","bodyPrimary","RegisterBoxText","RegisterLinkText","ReqisterLoginLink","NavLink","blueLink","RegisterForm","dispatch","useDispatch","useState","userData","setUserData","setCurrentStep","makeRequest","formData","body","place","console","log","register","handleNextStep","newData","final","prev","registerSteps","RegisterStepOne","nextStep","RegisterStepTwo","prevStep","emailInputId","nanoid","passwordInputId","confirmPasswordInputId","initialValues","validationSchema","onSubmit","values","isValid","dirty","autoComplete","id","placeholder","type","to","nameInputId","regionInputId","phoneInputId","onClick","size","mobile","mobileTablet","tablet","desktop","preMobile","preMobileTablet","preTablet","preDesktop"],"sourceRoot":""}